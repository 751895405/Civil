public {{this.name}} = {
  async sendTransactionAsync(
    {{> typed_inputs inputs=inputs}}
    {{#this.payable}}
    txData: TxDataPayble = {},
    {{/this.payable}}
    {{^this.payable}}
    txData: TxData = {},
    {{/this.payable}}
  ): Promise<MultisigProxyTransaction> {
    const self = this as {{contractName}}MultisigProxy;
    if (!isDefined(self.multisig)) {
      return createTwoStepSimple(
          self.ethApi,
          await (self.instance as any).{{this.name}}.sendTransactionAsync(
            {{> params inputs=inputs}}
            txData,
          ),
      );
    }
    const raw = await (self.instance as any).{{this.name}}.getRaw(
      {{> params inputs=inputs}}
      {...txData, gas: 0},
    );
    return self.createProxyTransaction(
      (await self.multisig.submitTransaction(
        self.instance.address,
        {{#this.payable}}
        txData.value,
        {{/this.payable}}
        {{^this.payable}}
        self.ethApi.toBigNumber(0),
        {{/this.payable}}
        raw.data!,
      )).txHash,
    );
  },
};
