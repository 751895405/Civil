export const enum {{contractName}}Events {
  {{#each events}}
  {{this.name}} = "{{this.name}}",
  {{/each}}
}

{{#each events}}
export interface {{../contractName}}Args{{this.name}} {
  {{#each inputs}}
  {{name}}: {{#parameterType type}}{{/parameterType}};
  {{/each}}
}
{{/each}}

{{#each events}}
export type {{../contractName}}Logs{{this.name}} = DecodedLogEntry<{{../contractName}}Args{{this.name}}, {{../contractName}}Events.{{this.name}}>;
{{/each}}

export type {{contractName}}LogsAll =
{{#each events}}
  {{../contractName}}Logs{{name}}{{#unless @last}} |{{/unless}}{{^unless @last}};{{/unless}}
{{/each}}

{{#each events}}
export type {{../contractName}}LogEvents{{this.name}} = DecodedLogEntryEvent<{{../contractName}}Args{{this.name}}, {{../contractName}}Events.{{this.name}}>;
{{/each}}

export type {{contractName}}LogEventsAll =
{{#each events}}
  {{../contractName}}LogEvents{{name}}{{#unless @last}} |{{/unless}}{{^unless @last}};{{/unless}}
{{/each}}