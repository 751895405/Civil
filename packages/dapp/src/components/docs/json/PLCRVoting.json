{"author":"Team: Aspyn Palatnick, Cem Ozer, Yorke Rhodes","title":"Partial-Lock-Commit-Reveal Voting scheme with ERC20 tokens","fileName":"/contracts/tcr/PLCRVoting.sol","name":"PLCRVoting","abi":[{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getTotalNumberOfTokensForWinningOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"INITIAL_POLL_NONCE","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_numTokens","type":"uint256"},{"name":"_pollID","type":"uint256"}],"name":"getInsertPointForNumTokens","outputs":[{"name":"prevNode","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_voteQuorum","type":"uint256"},{"name":"_commitDuration","type":"uint256"},{"name":"_revealDuration","type":"uint256"}],"name":"startPoll","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"voteTokenBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"}],"name":"getLastNode","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"revealPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"isPassed","outputs":[{"name":"passed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pollMap","outputs":[{"name":"commitEndDate","type":"uint256"},{"name":"revealEndDate","type":"uint256"},{"name":"voteQuorum","type":"uint256"},{"name":"votesFor","type":"uint256"},{"name":"votesAgainst","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"},{"name":"_salt","type":"uint256"}],"name":"getNumLosingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"}],"name":"getLockedTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"},{"name":"_secretHash","type":"bytes32"},{"name":"_numTokens","type":"uint256"},{"name":"_prevPollID","type":"uint256"}],"name":"commitVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"didCommit","outputs":[{"name":"committed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_prevID","type":"uint256"},{"name":"_nextID","type":"uint256"},{"name":"_voter","type":"address"},{"name":"_numTokens","type":"uint256"}],"name":"validPosition","outputs":[{"name":"valid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollExists","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pollNonce","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"rescueTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_user","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"attrUUID","outputs":[{"name":"UUID","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256"}],"name":"requestVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"commitPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"didReveal","outputs":[{"name":"revealed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256"},{"name":"_voteOption","type":"uint256"},{"name":"_salt","type":"uint256"}],"name":"revealVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"},{"name":"_salt","type":"uint256"}],"name":"getNumPassingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"getNumTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256"}],"name":"getCommitHash","outputs":[{"name":"commitHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_terminationDate","type":"uint256"}],"name":"isExpired","outputs":[{"name":"expired","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256"}],"name":"withdrawVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"getTotalNumberOfTokensForLosingOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollEnded","outputs":[{"name":"ended","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"name":"_tokenAddr","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VoteCommitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":false,"name":"votesFor","type":"uint256"},{"indexed":false,"name":"votesAgainst","type":"uint256"},{"indexed":true,"name":"choice","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VoteRevealed","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"voteQuorum","type":"uint256"},{"indexed":false,"name":"commitEndDate","type":"uint256"},{"indexed":false,"name":"revealEndDate","type":"uint256"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":true,"name":"creator","type":"address"}],"name":"_PollCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VotingRightsGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VotingRightsWithdrawn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_TokensRescued","type":"event"}],"bin":"6060604052341561000f57600080fd5b60405160208061270f8339810160405280805190602001909190505080600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600080819055505061268c806100836000396000f300606060405260043610610180576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063053e71a6146101855780632173a10f146101bc5780632c052031146101e557806332ed3d60146102445780633b9302941461028d578063427fa1d2146102da578063441c77c01461032757806349403183146103625780636148fed51461039d5780636afa97a8146103f05780636b2d95d41461044f5780636cbf9c5e1461049c5780637f97e836146104de578063819b02931461053857806388d21ff3146105a457806397508f36146105df5780639760356014610608578063a1103f371461062b578063a25236fe14610689578063a4439dc5146106ac578063aa7ca464146106e7578063b11d8bb814610741578063b43bd06914610776578063d1382092146107d5578063d901402b1461082b578063d9548e5314610889578063e7b1d43c146108c4578063e8cfa3f0146108e7578063ee6848301461091e578063fc0c546a14610959575b600080fd5b341561019057600080fd5b6101a660048080359060200190919050506109ae565b6040518082815260200191505060405180910390f35b34156101c757600080fd5b6101cf610a0f565b6040518082815260200191505060405180910390f35b34156101f057600080fd5b61022e600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610a14565b6040518082815260200191505060405180910390f35b341561024f57600080fd5b6102776004808035906020019091908035906020019091908035906020019091905050610c09565b6040518082815260200191505060405180910390f35b341561029857600080fd5b6102c4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d26565b6040518082815260200191505060405180910390f35b34156102e557600080fd5b610311600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610d3e565b6040518082815260200191505060405180910390f35b341561033257600080fd5b6103486004808035906020019091905050610e11565b604051808215151515815260200191505060405180910390f35b341561036d57600080fd5b6103836004808035906020019091905050610e60565b604051808215151515815260200191505060405180910390f35b34156103a857600080fd5b6103be6004808035906020019091905050610ef3565b604051808681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b34156103fb57600080fd5b610439600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091908035906020019091905050610f29565b6040518082815260200191505060405180910390f35b341561045a57600080fd5b610486600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611023565b6040518082815260200191505060405180910390f35b34156104a757600080fd5b6104dc60048080359060200190919080356000191690602001909190803590602001909190803590602001909190505061103e565b005b34156104e957600080fd5b61051e600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061168d565b604051808215151515815260200191505060405180910390f35b341561054357600080fd5b61058a600480803590602001909190803590602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190505061170c565b604051808215151515815260200191505060405180910390f35b34156105af57600080fd5b6105c56004808035906020019091905050611750565b604051808215151515815260200191505060405180910390f35b34156105ea57600080fd5b6105f261176b565b6040518082815260200191505060405180910390f35b341561061357600080fd5b6106296004808035906020019091905050611771565b005b341561063657600080fd5b61066b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611978565b60405180826000191660001916815260200191505060405180910390f35b341561069457600080fd5b6106aa60048080359060200190919050506119db565b005b34156106b757600080fd5b6106cd6004808035906020019091905050611c74565b604051808215151515815260200191505060405180910390f35b34156106f257600080fd5b610727600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050611cb1565b604051808215151515815260200191505060405180910390f35b341561074c57600080fd5b6107746004808035906020019091908035906020019091908035906020019091905050611d30565b005b341561078157600080fd5b6107bf600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190803590602001909190803590602001909190505061207d565b6040518082815260200191505060405180910390f35b34156107e057600080fd5b610815600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612177565b6040518082815260200191505060405180910390f35b341561083657600080fd5b61086b600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091908035906020019091905050612257565b60405180826000191660001916815260200191505060405180910390f35b341561089457600080fd5b6108aa600480803590602001909190505061233a565b604051808215151515815260200191505060405180910390f35b34156108cf57600080fd5b6108e56004808035906020019091905050612346565b005b34156108f257600080fd5b6109086004808035906020019091905050612538565b6040518082815260200191505060405180910390f35b341561092957600080fd5b61093f6004808035906020019091905050612599565b604051808215151515815260200191505060405180910390f35b341561096457600080fd5b61096c6125d5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60006109b982612599565b15156109c457600080fd5b6109cd82610e60565b156109f05760016000838152602001908152602001600020600301549050610a0a565b600160008381526020019081526020016000206004015490505b919050565b600081565b6000806000610a2286610d3e565b9150610a2e8683612177565b90505b600082141515610bfc57610a458683612177565b90508481111515610b2c5783821415610b2457600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6330fe0a0a9091846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610b0a57600080fd5b5af41515610b1757600080fd5b5050506040518051905091505b819250610c00565b600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6330fe0a0a9091846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610bde57600080fd5b5af41515610beb57600080fd5b505050604051805190509150610a31565b8192505b50509392505050565b6000806000600160005401600081905550610c2d85426125fb90919063ffffffff16565b9150610c4284836125fb90919063ffffffff16565b905060a060405190810160405280838152602001828152602001878152602001600081526020016000815250600160008054815260200190815260200160002060008201518160000155602082015181600101556040820151816002015560608201518160030155608082015181600401559050503373ffffffffffffffffffffffffffffffffffffffff166000547f404f1f1c229d9eb2a949e7584da6ffde9d059ef2169f487ca815434cce0640d088858560405180848152602001838152602001828152602001935050505060405180910390a3600054925050509392505050565b60026020528060005260406000206000915090505481565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6330fe0a0a909160006040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b1515610df357600080fd5b5af41515610e0057600080fd5b505050604051805190509050919050565b6000610e1c82611750565b1515610e2757600080fd5b610e46600160008481526020019081526020016000206001015461233a565b158015610e595750610e5782611c74565b155b9050919050565b6000610e6a612630565b610e7383612599565b1515610e7e57600080fd5b6001600084815260200190815260200160002060a060405190810160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505090508060800151816060015101816040015102816060015160640211915050919050565b60016020528060005260406000206000915090508060000154908060010154908060020154908060030154908060040154905085565b600080600080610f3886612599565b1515610f4357600080fd5b6001600087815260200190815260200160002060060160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515610faf57600080fd5b610fb886610e60565b610fc3576001610fc6565b60005b60ff1692508285604051808381526020018281526020019250505060405180910390209150610ff58787612257565b90508060001916826000191614151561100d57600080fd5b6110178787612177565b93505050509392505050565b60006110378261103284610d3e565b612177565b9050919050565b60008061104a86611c74565b151561105557600080fd5b83600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101515156110a357600080fd5b600086141515156110b357600080fd5b60008314806111875750600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__63366a5ba29091856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b151561116f57600080fd5b5af4151561117c57600080fd5b505050604051805190505b151561119257600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6307d29ac99091856040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b151561124457600080fd5b5af4151561125157600080fd5b50505060405180519050915085821461126a5781611334565b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__6307d29ac99091886040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b151561131c57600080fd5b5af4151561132957600080fd5b505050604051805190505b91506113428383338761170c565b151561134d57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__639735c51b90918589866040518563ffffffff167c01000000000000000000000000000000000000000000000000000000000281526004018085815260200184815260200183815260200182815260200194505050505060006040518083038186803b151561140f57600080fd5b5af4151561141c57600080fd5b5050506114293387611978565b9050600473__contracts/tcr/installed_contracts/at__63977aa031909183876040518463ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180848152602001836000191660001916815260200180602001838152602001828103825260098152602001807f6e756d546f6b656e73000000000000000000000000000000000000000000000081525060200194505050505060006040518083038186803b15156114e957600080fd5b5af415156114f657600080fd5b505050600473__contracts/tcr/installed_contracts/at__63977aa03190918388600190046040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808481526020018360001916600019168152602001806020018381526020018281038252600a8152602001807f636f6d6d6974486173680000000000000000000000000000000000000000000081525060200194505050505060006040518083038186803b15156115bb57600080fd5b5af415156115c857600080fd5b505050600180600088815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16867fea7979e4280d7e6bffc1c7d83a1ac99f16d02ecc14465ce41016226783b663d7866040518082815260200191505060405180910390a3505050505050565b600061169882611750565b15156116a357600080fd5b6001600083815260200190815260200160002060050160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600080600061171b8588612177565b841015915061172a8587612177565b841115806117385750600086145b90508180156117445750805b92505050949350505050565b600080821415801561176457506000548211155b9050919050565b60005481565b611790600160008381526020019081526020016000206001015461233a565b151561179b57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__63366a5ba29091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060206040518083038186803b151561184d57600080fd5b5af4151561185a57600080fd5b50505060405180519050151561186f57600080fd5b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__636d900ed09091836040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060006040518083038186803b151561192157600080fd5b5af4151561192e57600080fd5b5050503373ffffffffffffffffffffffffffffffffffffffff16817f402507661c8c8cb90e0a796450b8bdd28b6c516f05279c0cd29e84c344e1699a60405160405180910390a350565b60008282604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166c01000000000000000000000000028152601401828152602001925050506040518091039020905092915050565b80600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b1515611a9857600080fd5b5af11515611aa557600080fd5b5050506040518051905010151515611abc57600080fd5b80600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540192505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1515611c0157600080fd5b5af11515611c0e57600080fd5b505050604051805190501515611c2357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167ff7aaf024511d9982df8cd0d437c71c30106e6848cd1ba3d288d7a9c0e276aeda826040518082815260200191505060405180910390a250565b6000611c7f82611750565b1515611c8a57600080fd5b611ca9600160008481526020019081526020016000206000015461233a565b159050919050565b6000611cbc82611750565b1515611cc757600080fd5b6001600083815260200190815260200160002060060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000611d3b84610e11565b1515611d4657600080fd5b6001600085815260200190815260200160002060050160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff161515611db257600080fd5b6001600085815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151515611e1f57600080fd5b611e293385612257565b6000191683836040518083815260200182815260200192505050604051809103902060001916141515611e5b57600080fd5b611e653385612177565b90506001831415611e9957806001600086815260200190815260200160002060030160008282540192505081905550611ebe565b8060016000868152602001908152602001600020600401600082825401925050819055505b600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002073__contracts/tcr/installed_contracts/dl__636d900ed09091866040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018281526020019250505060006040518083038186803b1515611f7057600080fd5b5af41515611f7d57600080fd5b505050600180600086815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff1683857ff42c78852433ace4bdcb44f6e80c8daae529e2d999c88cf6bf8f77b1e2890fdd84600160008a815260200190815260200160002060030154600160008b81526020019081526020016000206004015460405180848152602001838152602001828152602001935050505060405180910390a450505050565b60008060008061208c86612599565b151561209757600080fd5b6001600087815260200190815260200160002060060160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151561210357600080fd5b61210c86610e60565b61211757600061211a565b60015b60ff16925082856040518083815260200182815260200192505050604051809103902091506121498787612257565b90508060001916826000191614151561216157600080fd5b61216b8787612177565b93505050509392505050565b6000600473__contracts/tcr/installed_contracts/at__6350389f5c90916121a18686611978565b6040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040180838152602001826000191660001916815260200180602001828103825260098152602001807f6e756d546f6b656e730000000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b151561223857600080fd5b5af4151561224557600080fd5b50505060405180519050905092915050565b6000600473__contracts/tcr/installed_contracts/at__6350389f5c90916122818686611978565b6040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808381526020018260001916600019168152602001806020018281038252600a8152602001807f636f6d6d69744861736800000000000000000000000000000000000000000000815250602001935050505060206040518083038186803b151561231857600080fd5b5af4151561232557600080fd5b50505060405180519050600102905092915050565b60008142119050919050565b60006123a261235433611023565b600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461261790919063ffffffff16565b90508181101515156123b357600080fd5b81600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282540392505081905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15156124c457600080fd5b5af115156124d157600080fd5b5050506040518051905015156124e657600080fd5b3373ffffffffffffffffffffffffffffffffffffffff167ffaeb7dbb9992397d26ea1944efd40c80b40f702faf69b46c67ad10aba68ccb79836040518082815260200191505060405180910390a25050565b600061254382612599565b151561254e57600080fd5b61255782610e60565b1561257a5760016000838152602001908152602001600020600401549050612594565b600160008381526020019081526020016000206003015490505b919050565b60006125a482611750565b15156125af57600080fd5b6125ce600160008481526020019081526020016000206001015461233a565b9050919050565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818301905082811015151561260e57fe5b80905092915050565b600082821115151561262557fe5b818303905092915050565b60a060405190810160405280600081526020016000815260200160008152602001600081526020016000815250905600a165627a7a72305820fd1c2ec64f7006bb0dcc554b56032eec3db3ee6afcbf49e4b3bb82183f1c056a0029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP1 PUSH2 0x270F DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP DUP1 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP POP PUSH2 0x268C DUP1 PUSH2 0x83 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x53E71A6 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x2173A10F EQ PUSH2 0x1BC JUMPI DUP1 PUSH4 0x2C052031 EQ PUSH2 0x1E5 JUMPI DUP1 PUSH4 0x32ED3D60 EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x3B930294 EQ PUSH2 0x28D JUMPI DUP1 PUSH4 0x427FA1D2 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x441C77C0 EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x49403183 EQ PUSH2 0x362 JUMPI DUP1 PUSH4 0x6148FED5 EQ PUSH2 0x39D JUMPI DUP1 PUSH4 0x6AFA97A8 EQ PUSH2 0x3F0 JUMPI DUP1 PUSH4 0x6B2D95D4 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0x6CBF9C5E EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x7F97E836 EQ PUSH2 0x4DE JUMPI DUP1 PUSH4 0x819B0293 EQ PUSH2 0x538 JUMPI DUP1 PUSH4 0x88D21FF3 EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0x97508F36 EQ PUSH2 0x5DF JUMPI DUP1 PUSH4 0x97603560 EQ PUSH2 0x608 JUMPI DUP1 PUSH4 0xA1103F37 EQ PUSH2 0x62B JUMPI DUP1 PUSH4 0xA25236FE EQ PUSH2 0x689 JUMPI DUP1 PUSH4 0xA4439DC5 EQ PUSH2 0x6AC JUMPI DUP1 PUSH4 0xAA7CA464 EQ PUSH2 0x6E7 JUMPI DUP1 PUSH4 0xB11D8BB8 EQ PUSH2 0x741 JUMPI DUP1 PUSH4 0xB43BD069 EQ PUSH2 0x776 JUMPI DUP1 PUSH4 0xD1382092 EQ PUSH2 0x7D5 JUMPI DUP1 PUSH4 0xD901402B EQ PUSH2 0x82B JUMPI DUP1 PUSH4 0xD9548E53 EQ PUSH2 0x889 JUMPI DUP1 PUSH4 0xE7B1D43C EQ PUSH2 0x8C4 JUMPI DUP1 PUSH4 0xE8CFA3F0 EQ PUSH2 0x8E7 JUMPI DUP1 PUSH4 0xEE684830 EQ PUSH2 0x91E JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x959 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x9AE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CF PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x1F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xA14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x24F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x277 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xC09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2C4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x2E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xD3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x332 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE11 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x36D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x383 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3BE PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xEF3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP6 POP POP POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x3FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x439 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0xF29 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x45A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x486 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x4A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4DC PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH1 0x0 NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x103E JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x4E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x51E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x168D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x58A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x170C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5C5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1750 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x5EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x5F2 PUSH2 0x176B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x629 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1771 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x66B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x694 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6AA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x19DB JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x6B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6CD PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1C74 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x6F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x727 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1CB1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x74C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x774 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x1D30 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x781 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7BF PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x207D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x7E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x815 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x836 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x86B PUSH1 0x4 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x894 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8AA PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x233A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x8CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x8E5 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2346 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x8F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x908 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2538 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x929 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x93F PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x2599 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE ISZERO PUSH2 0x964 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x96C PUSH2 0x25D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH2 0x9B9 DUP3 PUSH2 0x2599 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x9C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9CD DUP3 PUSH2 0xE60 JUMP JUMPDEST ISZERO PUSH2 0x9F0 JUMPI PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH2 0xA0A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0xA22 DUP7 PUSH2 0xD3E JUMP JUMPDEST SWAP2 POP PUSH2 0xA2E DUP7 DUP4 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x0 DUP3 EQ ISZERO ISZERO PUSH2 0xBFC JUMPI PUSH2 0xA45 DUP7 DUP4 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP DUP5 DUP2 GT ISZERO ISZERO PUSH2 0xB2C JUMPI DUP4 DUP3 EQ ISZERO PUSH2 0xB24 JUMPI PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x30FE0A0A SWAP1 SWAP2 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xB0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xB17 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP JUMPDEST DUP2 SWAP3 POP PUSH2 0xC00 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x30FE0A0A SWAP1 SWAP2 DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xBDE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xBEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP PUSH2 0xA31 JUMP JUMPDEST DUP2 SWAP3 POP JUMPDEST POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH2 0xC2D DUP6 TIMESTAMP PUSH2 0x25FB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP2 POP PUSH2 0xC42 DUP5 DUP4 PUSH2 0x25FB SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP8 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP PUSH1 0x1 PUSH1 0x0 DUP1 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE SWAP1 POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SLOAD PUSH32 0x404F1F1C229D9EB2A949E7584DA6FFDE9D059EF2169F487CA815434CCE0640D0 DUP9 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x0 SLOAD SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x30FE0A0A SWAP1 SWAP2 PUSH1 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0xDF3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0xE00 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE1C DUP3 PUSH2 0x1750 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xE27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE46 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x233A JUMP JUMPDEST ISZERO DUP1 ISZERO PUSH2 0xE59 JUMPI POP PUSH2 0xE57 DUP3 PUSH2 0x1C74 JUMP JUMPDEST ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE6A PUSH2 0x2630 JUMP JUMPDEST PUSH2 0xE73 DUP4 PUSH2 0x2599 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xE7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x80 ADD MLOAD DUP2 PUSH1 0x60 ADD MLOAD ADD DUP2 PUSH1 0x40 ADD MLOAD MUL DUP2 PUSH1 0x60 ADD MLOAD PUSH1 0x64 MUL GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0xF38 DUP7 PUSH2 0x2599 JUMP JUMPDEST ISZERO ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0xFC3 JUMPI PUSH1 0x1 PUSH2 0xFC6 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND SWAP3 POP DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP2 POP PUSH2 0xFF5 DUP8 DUP8 PUSH2 0x2257 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x100D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1017 DUP8 DUP8 PUSH2 0x2177 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1037 DUP3 PUSH2 0x1032 DUP5 PUSH2 0xD3E JUMP JUMPDEST PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x104A DUP7 PUSH2 0x1C74 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1055 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD LT ISZERO ISZERO ISZERO PUSH2 0x10A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP7 EQ ISZERO ISZERO ISZERO PUSH2 0x10B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP4 EQ DUP1 PUSH2 0x1187 JUMPI POP PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x366A5BA2 SWAP1 SWAP2 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x116F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x117C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP JUMPDEST ISZERO ISZERO PUSH2 0x1192 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x7D29AC9 SWAP1 SWAP2 DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1251 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP2 POP DUP6 DUP3 EQ PUSH2 0x126A JUMPI DUP2 PUSH2 0x1334 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x7D29AC9 SWAP1 SWAP2 DUP9 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x131C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1329 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP JUMPDEST SWAP2 POP PUSH2 0x1342 DUP4 DUP4 CALLER DUP8 PUSH2 0x170C JUMP JUMPDEST ISZERO ISZERO PUSH2 0x134D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x9735C51B SWAP1 SWAP2 DUP6 DUP10 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x140F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH2 0x1429 CALLER DUP8 PUSH2 0x1978 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH20 0x0 PUSH4 0x977AA031 SWAP1 SWAP2 DUP4 DUP8 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E756D546F6B656E730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x14E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x14F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x4 PUSH20 0x0 PUSH4 0x977AA031 SWAP1 SWAP2 DUP4 DUP9 PUSH1 0x1 SWAP1 DIV PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6D6D69744861736800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP5 POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x15BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x15C8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0xEA7979E4280D7E6BFFC1C7D83A1AC99F16D02ECC14465CE41016226783B663D7 DUP7 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1698 DUP3 PUSH2 0x1750 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x16A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x171B DUP6 DUP9 PUSH2 0x2177 JUMP JUMPDEST DUP5 LT ISZERO SWAP2 POP PUSH2 0x172A DUP6 DUP8 PUSH2 0x2177 JUMP JUMPDEST DUP5 GT ISZERO DUP1 PUSH2 0x1738 JUMPI POP PUSH1 0x0 DUP7 EQ JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x1744 JUMPI POP DUP1 JUMPDEST SWAP3 POP POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ ISZERO DUP1 ISZERO PUSH2 0x1764 JUMPI POP PUSH1 0x0 SLOAD DUP3 GT ISZERO JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1790 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x233A JUMP JUMPDEST ISZERO ISZERO PUSH2 0x179B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x366A5BA2 SWAP1 SWAP2 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x184D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x185A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 0x186F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x6D900ED0 SWAP1 SWAP2 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x192E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x402507661C8C8CB90E0A796450B8BDD28B6C516F05279C0CD29E84C344E1699A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 PUSH1 0x40 MLOAD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x14 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1A98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x1AA5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP LT ISZERO ISZERO ISZERO PUSH2 0x1ABC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1C01 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x1C0E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 0x1C23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF7AAF024511D9982DF8CD0D437C71C30106E6848CD1BA3D288D7A9C0E276AEDA DUP3 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C7F DUP3 PUSH2 0x1750 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1C8A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1CA9 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD SLOAD PUSH2 0x233A JUMP JUMPDEST ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CBC DUP3 PUSH2 0x1750 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1CC7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D3B DUP5 PUSH2 0xE11 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x1D46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x5 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x1DB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO PUSH2 0x1E1F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E29 CALLER DUP6 PUSH2 0x2257 JUMP JUMPDEST PUSH1 0x0 NOT AND DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x1E5B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E65 CALLER DUP6 PUSH2 0x2177 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1E99 JUMPI DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1EBE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x3 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH20 0x0 PUSH4 0x6D900ED0 SWAP1 SWAP2 DUP7 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x1F70 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x1F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x1 DUP1 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP6 PUSH32 0xF42C78852433ACE4BDCB44F6E80C8DAAE529E2D999C88CF6BF8F77B1E2890FDD DUP5 PUSH1 0x1 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x208C DUP7 PUSH2 0x2599 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x2097 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x6 ADD PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH2 0x2103 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x210C DUP7 PUSH2 0xE60 JUMP JUMPDEST PUSH2 0x2117 JUMPI PUSH1 0x0 PUSH2 0x211A JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH1 0xFF AND SWAP3 POP DUP3 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 SWAP2 POP PUSH2 0x2149 DUP8 DUP8 PUSH2 0x2257 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x0 NOT AND DUP3 PUSH1 0x0 NOT AND EQ ISZERO ISZERO PUSH2 0x2161 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x216B DUP8 DUP8 PUSH2 0x2177 JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH20 0x0 PUSH4 0x50389F5C SWAP1 SWAP2 PUSH2 0x21A1 DUP7 DUP7 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x6E756D546F6B656E730000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x2245 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH20 0x0 PUSH4 0x50389F5C SWAP1 SWAP2 PUSH2 0x2281 DUP7 DUP7 PUSH2 0x1978 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x0 NOT AND PUSH1 0x0 NOT AND DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH32 0x636F6D6D69744861736800000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x20 ADD SWAP4 POP POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x2318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS DELEGATECALL ISZERO ISZERO PUSH2 0x2325 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP PUSH1 0x1 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 TIMESTAMP GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23A2 PUSH2 0x2354 CALLER PUSH2 0x1023 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH2 0x2617 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x23B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH29 0x100000000000000000000000000000000000000000000000000000000 MUL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO ISZERO PUSH2 0x24C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST GAS CALL ISZERO ISZERO PUSH2 0x24D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 MLOAD SWAP1 POP ISZERO ISZERO PUSH2 0x24E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFAEB7DBB9992397D26EA1944EFD40C80B40F702FAF69B46C67AD10ABA68CCB79 DUP4 PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2543 DUP3 PUSH2 0x2599 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x254E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2557 DUP3 PUSH2 0xE60 JUMP JUMPDEST ISZERO PUSH2 0x257A JUMPI PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD SLOAD SWAP1 POP PUSH2 0x2594 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25A4 DUP3 PUSH2 0x1750 JUMP JUMPDEST ISZERO ISZERO PUSH2 0x25AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25CE PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x233A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP DUP3 DUP2 LT ISZERO ISZERO ISZERO PUSH2 0x260E JUMPI INVALID JUMPDEST DUP1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO ISZERO ISZERO PUSH2 0x2625 JUMPI INVALID JUMPDEST DUP2 DUP4 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 REVERT SHR 0x2e 0xc6 0x4f PUSH17 0x6BB0DCC554B56032EEC3DB3EE6AFCBF49 0xe4 0xb3 0xbb DUP3 XOR 0x3f SHR SDIV PUSH11 0x29000000000000000000 ","source":"pragma solidity ^0.4.19;\n\nimport \"./installed_contracts/tokens/contracts/eip20/EIP20Interface.sol\";\nimport \"./installed_contracts/attrstore/contracts/AttributeStore.sol\";\nimport \"./installed_contracts/dll/contracts/DLL.sol\";\nimport \"../zeppelin-solidity/SafeMath.sol\";\n\n/**\n@title Partial-Lock-Commit-Reveal Voting scheme with ERC20 tokens\n@author Team: Aspyn Palatnick, Cem Ozer, Yorke Rhodes\n*/\ncontract PLCRVoting {\n\n  // ============\n  // EVENTS:\n  // ============\n\n  event _VoteCommitted(uint indexed pollID, uint numTokens, address indexed voter);\n  event _VoteRevealed(uint indexed pollID, uint numTokens, uint votesFor, uint votesAgainst, uint indexed choice, address indexed voter);\n  event _PollCreated(uint voteQuorum, uint commitEndDate, uint revealEndDate, uint indexed pollID, address indexed creator);\n  event _VotingRightsGranted(uint numTokens, address indexed voter);\n  event _VotingRightsWithdrawn(uint numTokens, address indexed voter);\n  event _TokensRescued(uint indexed pollID, address indexed voter);\n\n  // ============\n  // DATA STRUCTURES:\n  // ============\n\n  using AttributeStore for AttributeStore.Data;\n  using DLL for DLL.Data;\n  using SafeMath for uint;\n\n  struct Poll {\n    uint commitEndDate;     /// expiration date of commit period for poll\n    uint revealEndDate;     /// expiration date of reveal period for poll\n    uint voteQuorum;\t    /// number of votes required for a proposal to pass\n    uint votesFor;\t\t    /// tally of votes supporting proposal\n    uint votesAgainst;      /// tally of votes countering proposal\n    mapping(address => bool) didCommit;  /// indicates whether an address committed a vote for this poll\n    mapping(address => bool) didReveal;   /// indicates whether an address revealed a vote for this poll\n  }\n\n  // ============\n  // STATE VARIABLES:\n  // ============\n\n  uint constant public INITIAL_POLL_NONCE = 0;\n  uint public pollNonce;\n\n  mapping(uint => Poll) public pollMap; // maps pollID to Poll struct\n  mapping(address => uint) public voteTokenBalance; // maps user's address to voteToken balance\n\n  mapping(address => DLL.Data) dllMap;\n  AttributeStore.Data store;\n\n  EIP20Interface public token;\n\n  // ============\n  // CONSTRUCTOR:\n  // ============\n\n  /**\n  @dev Initializes voteQuorum, commitDuration, revealDuration, and pollNonce in addition to token contract and trusted mapping\n  @param _tokenAddr The address where the ERC20 token contract is deployed\n  */\n  function PLCRVoting(address _tokenAddr) public {\n    token = EIP20Interface(_tokenAddr);\n    pollNonce = INITIAL_POLL_NONCE;\n  }\n\n  // ================\n  // TOKEN INTERFACE:\n  // ================\n\n  /**\n  @notice Loads _numTokens ERC20 tokens into the voting contract for one-to-one voting rights\n  @dev Assumes that msg.sender has approved voting contract to spend on their behalf\n  @param _numTokens The number of votingTokens desired in exchange for ERC20 tokens\n  */\n  function requestVotingRights(uint _numTokens) external {\n    require(token.balanceOf(msg.sender) >= _numTokens);\n    voteTokenBalance[msg.sender] += _numTokens;\n    require(token.transferFrom(msg.sender, this, _numTokens));\n    _VotingRightsGranted(_numTokens, msg.sender);\n  }\n\n  /**\n  @notice Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights\n  @param _numTokens The number of ERC20 tokens desired in exchange for voting rights\n  */\n  function withdrawVotingRights(uint _numTokens) external {\n    uint availableTokens = voteTokenBalance[msg.sender].sub(getLockedTokens(msg.sender));\n    require(availableTokens >= _numTokens);\n    voteTokenBalance[msg.sender] -= _numTokens;\n    require(token.transfer(msg.sender, _numTokens));\n    _VotingRightsWithdrawn(_numTokens, msg.sender);\n  }\n\n  /**\n  @dev Unlocks tokens locked in unrevealed vote where poll has ended\n  @param _pollID Integer identifier associated with the target poll\n  */\n  function rescueTokens(uint _pollID) external {\n    require(isExpired(pollMap[_pollID].revealEndDate));\n    require(dllMap[msg.sender].contains(_pollID));\n\n    dllMap[msg.sender].remove(_pollID);\n    _TokensRescued(_pollID, msg.sender);\n  }\n\n  // =================\n  // VOTING INTERFACE:\n  // =================\n\n  /**\n  @notice Commits vote using hash of choice and secret salt to conceal vote until reveal\n  @param _pollID Integer identifier associated with target poll\n  @param _secretHash Commit keccak256 hash of voter's choice and salt (tightly packed in this order)\n  @param _numTokens The number of tokens to be committed towards the target poll\n  @param _prevPollID The ID of the poll that the user has voted the maximum number of tokens in which is still less than or equal to numTokens\n  */\n  function commitVote(uint _pollID, bytes32 _secretHash, uint _numTokens, uint _prevPollID) external {\n    require(commitPeriodActive(_pollID));\n    require(voteTokenBalance[msg.sender] >= _numTokens); // prevent user from overspending\n    require(_pollID != 0);                // prevent user from committing to zero node placeholder\n\n    // Check if _prevPollID exists in the user's DLL or if _prevPollID is 0\n    require(_prevPollID == 0 || dllMap[msg.sender].contains(_prevPollID));\n\n    uint nextPollID = dllMap[msg.sender].getNext(_prevPollID);\n\n    // if nextPollID is equal to _pollID, _pollID is being updated,\n    nextPollID = (nextPollID == _pollID) ? dllMap[msg.sender].getNext(_pollID) : nextPollID;\n\n    require(validPosition(_prevPollID, nextPollID, msg.sender, _numTokens));\n    dllMap[msg.sender].insert(_prevPollID, _pollID, nextPollID);\n\n    /* solium-disable-next-line */\n    bytes32 UUID = attrUUID(msg.sender, _pollID);\n\n    store.setAttribute(UUID, \"numTokens\", _numTokens);\n    store.setAttribute(UUID, \"commitHash\", uint(_secretHash));\n\n    pollMap[_pollID].didCommit[msg.sender] = true;\n    _VoteCommitted(_pollID, _numTokens, msg.sender);\n  }\n\n  /**\n  @dev Compares previous and next poll's committed tokens for sorting purposes\n  @param _prevID Integer identifier associated with previous poll in sorted order\n  @param _nextID Integer identifier associated with next poll in sorted order\n  @param _voter Address of user to check DLL position for\n  @param _numTokens The number of tokens to be committed towards the poll (used for sorting)\n  @return valid Boolean indication of if the specified position maintains the sort\n  */\n  function validPosition(uint _prevID, uint _nextID, address _voter, uint _numTokens) public constant returns (bool valid) {\n    bool prevValid = (_numTokens >= getNumTokens(_voter, _prevID));\n    // if next is zero node, _numTokens does not need to be greater\n    bool nextValid = (_numTokens <= getNumTokens(_voter, _nextID) || _nextID == 0);\n    return prevValid && nextValid;\n  }\n\n  /**\n  @notice Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens\n  @param _pollID Integer identifier associated with target poll\n  @param _voteOption Vote choice used to generate commitHash for associated poll\n  @param _salt Secret number used to generate commitHash for associated poll\n  */\n  function revealVote(uint _pollID, uint _voteOption, uint _salt) external {\n    // Make sure the reveal period is active\n    require(revealPeriodActive(_pollID));\n    require(pollMap[_pollID].didCommit[msg.sender]);                         // make sure user has committed a vote for this poll\n    require(!pollMap[_pollID].didReveal[msg.sender]);                        // prevent user from revealing multiple times\n    require(keccak256(_voteOption, _salt) == getCommitHash(msg.sender, _pollID)); // compare resultant hash from inputs to original commitHash\n\n    uint numTokens = getNumTokens(msg.sender, _pollID);\n\n    if (_voteOption == 1) {// apply numTokens to appropriate poll choice\n      pollMap[_pollID].votesFor += numTokens;\n    } else {\n      pollMap[_pollID].votesAgainst += numTokens;\n    }\n\n    dllMap[msg.sender].remove(_pollID); // remove the node referring to this vote upon reveal\n    pollMap[_pollID].didReveal[msg.sender] = true;\n\n    _VoteRevealed(_pollID, numTokens, pollMap[_pollID].votesFor, pollMap[_pollID].votesAgainst, _voteOption, msg.sender);\n  }\n\n  /**\n  @param _pollID Integer identifier associated with target poll\n  @param _salt Arbitrarily chosen integer used to generate secretHash\n  @return correctVotes Number of tokens voted for winning option\n  */\n  function getNumPassingTokens(address _voter, uint _pollID, uint _salt) public constant returns (uint correctVotes) {\n    require(pollEnded(_pollID));\n    require(pollMap[_pollID].didReveal[_voter]);\n\n    uint winningChoice = isPassed(_pollID) ? 1 : 0;\n    bytes32 winnerHash = keccak256(winningChoice, _salt);\n    bytes32 commitHash = getCommitHash(_voter, _pollID);\n\n    require(winnerHash == commitHash);\n\n    return getNumTokens(_voter, _pollID);\n  }\n\n  /**\n  @param _pollID Integer identifier associated with target poll\n  @param _salt Arbitrarily chosen integer used to generate secretHash\n  @return correctVotes Number of tokens voted for losing option\n  */\n  function getNumLosingTokens(address _voter, uint _pollID, uint _salt) public constant returns (uint correctVotes) {\n    require(pollEnded(_pollID));\n    require(pollMap[_pollID].didReveal[_voter]);\n\n    uint losingChoice = isPassed(_pollID) ? 0 : 1;\n    bytes32 loserHash = keccak256(losingChoice, _salt);\n    bytes32 commitHash = getCommitHash(_voter, _pollID);\n\n    require(loserHash == commitHash);\n\n    return getNumTokens(_voter, _pollID);\n  }\n\n  // ==================\n  // POLLING INTERFACE:\n  // ==================\n\n  /**\n  @dev Initiates a poll with canonical configured parameters at pollID emitted by PollCreated event\n  @param _voteQuorum Type of majority (out of 100) that is necessary for poll to be successful\n  @param _commitDuration Length of desired commit period in seconds\n  @param _revealDuration Length of desired reveal period in seconds\n  */\n  function startPoll(uint _voteQuorum, uint _commitDuration, uint _revealDuration) public returns (uint pollID) {\n    pollNonce = pollNonce + 1;\n\n    uint commitEndDate = block.timestamp.add(_commitDuration);\n    uint revealEndDate = commitEndDate.add(_revealDuration);\n\n    pollMap[pollNonce] = Poll({\n      voteQuorum: _voteQuorum,\n      commitEndDate: commitEndDate,\n      revealEndDate: revealEndDate,\n      votesFor: 0,\n      votesAgainst: 0\n    });\n\n    _PollCreated(_voteQuorum, commitEndDate, revealEndDate, pollNonce, msg.sender);\n    return pollNonce;\n  }\n\n  /**\n  @notice Determines if proposal has passed\n  @dev Check if votesFor out of totalVotes exceeds votesQuorum (requires pollEnded)\n  @param _pollID Integer identifier associated with target poll\n  */\n  function isPassed(uint _pollID) constant public returns (bool passed) {\n    require(pollEnded(_pollID));\n\n    Poll memory poll = pollMap[_pollID];\n    return (100 * poll.votesFor) > (poll.voteQuorum * (poll.votesFor + poll.votesAgainst));\n  }\n\n  // ----------------\n  // POLLING HELPERS:\n  // ----------------\n\n  /**\n  @dev Gets the total winning votes for reward distribution purposes\n  @param _pollID Integer identifier associated with target poll\n  @return Total number of votes committed to the winning option for specified poll\n  */\n  function getTotalNumberOfTokensForWinningOption(uint _pollID) constant public returns (uint numTokens) {\n    require(pollEnded(_pollID));\n\n    if (isPassed(_pollID))\n      return pollMap[_pollID].votesFor;\n    else\n      return pollMap[_pollID].votesAgainst;\n  }\n\n  /**\n  @dev Gets the total losing votes for reward distribution purposes\n  @param _pollID Integer identifier associated with target poll\n  @return Total number of votes committed to the losing option for specified poll\n  */\n  function getTotalNumberOfTokensForLosingOption(uint _pollID) constant public returns (uint numTokens) {\n    require(pollEnded(_pollID));\n\n    if (isPassed(_pollID))\n      return pollMap[_pollID].votesAgainst;\n    else\n      return pollMap[_pollID].votesFor;\n  }\n\n  /**\n  @notice Determines if poll is over\n  @dev Checks isExpired for specified poll's revealEndDate\n  @return Boolean indication of whether polling period is over\n  */\n  function pollEnded(uint _pollID) constant public returns (bool ended) {\n    require(pollExists(_pollID));\n\n    return isExpired(pollMap[_pollID].revealEndDate);\n  }\n\n  /**\n  @notice Checks if the commit period is still active for the specified poll\n  @dev Checks isExpired for the specified poll's commitEndDate\n  @param _pollID Integer identifier associated with target poll\n  @return Boolean indication of isCommitPeriodActive for target poll\n  */\n  function commitPeriodActive(uint _pollID) constant public returns (bool active) {\n    require(pollExists(_pollID));\n\n    return !isExpired(pollMap[_pollID].commitEndDate);\n  }\n\n  /**\n  @notice Checks if the reveal period is still active for the specified poll\n  @dev Checks isExpired for the specified poll's revealEndDate\n  @param _pollID Integer identifier associated with target poll\n  */\n  function revealPeriodActive(uint _pollID) constant public returns (bool active) {\n    require(pollExists(_pollID));\n\n    return !isExpired(pollMap[_pollID].revealEndDate) && !commitPeriodActive(_pollID);\n  }\n\n  /**\n  @dev Checks if user has committed for specified poll\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Boolean indication of whether user has committed\n  */\n  function didCommit(address _voter, uint _pollID) constant public returns (bool committed) {\n    require(pollExists(_pollID));\n\n    return pollMap[_pollID].didCommit[_voter];\n  }\n\n  /**\n  @dev Checks if user has revealed for specified poll\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Boolean indication of whether user has revealed\n  */\n  function didReveal(address _voter, uint _pollID) constant public returns (bool revealed) {\n    require(pollExists(_pollID));\n\n    return pollMap[_pollID].didReveal[_voter];\n  }\n\n  /**\n  @dev Checks if a poll exists\n  @param _pollID The pollID whose existance is to be evaluated.\n  @return Boolean Indicates whether a poll exists for the provided pollID\n  */\n  function pollExists(uint _pollID) constant public returns (bool exists) {\n    return (_pollID != 0 && _pollID <= pollNonce);\n  }\n\n  // ---------------------------\n  // DOUBLE-LINKED-LIST HELPERS:\n  // ---------------------------\n\n  /**\n  @dev Gets the bytes32 commitHash property of target poll\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Bytes32 hash property attached to target poll\n  */\n  function getCommitHash(address _voter, uint _pollID) constant public returns (bytes32 commitHash) {\n    return bytes32(store.getAttribute(attrUUID(_voter, _pollID), \"commitHash\"));\n  }\n\n  /**\n  @dev Wrapper for getAttribute with attrName=\"numTokens\"\n  @param _voter Address of user to check against\n  @param _pollID Integer identifier associated with target poll\n  @return Number of tokens committed to poll in sorted poll-linked-list\n  */\n  function getNumTokens(address _voter, uint _pollID) constant public returns (uint numTokens) {\n    return store.getAttribute(attrUUID(_voter, _pollID), \"numTokens\");\n  }\n\n  /**\n  @dev Gets top element of sorted poll-linked-list\n  @param _voter Address of user to check against\n  @return Integer identifier to poll with maximum number of tokens committed to it\n  */\n  function getLastNode(address _voter) constant public returns (uint pollID) {\n    return dllMap[_voter].getPrev(0);\n  }\n\n  /**\n  @dev Gets the numTokens property of getLastNode\n  @param _voter Address of user to check against\n  @return Maximum number of tokens committed in poll specified\n  */\n  function getLockedTokens(address _voter) constant public returns (uint numTokens) {\n    return getNumTokens(_voter, getLastNode(_voter));\n  }\n\n  /*\n  @dev Takes the last node in the user's DLL and iterates backwards through the list searching\n  for a node with a value less than or equal to the provided _numTokens value. When such a node\n  is found, if the provided _pollID matches the found nodeID, this operation is an in-place\n  update. In that case, return the previous node of the node being updated. Otherwise return the\n  first node that was found with a value less than or equal to the provided _numTokens.\n  @param _voter The voter whose DLL will be searched\n  @param _numTokens The value for the numTokens attribute in the node to be inserted\n  @return the node which the propoded node should be inserted after\n  */\n  function getInsertPointForNumTokens(address _voter, uint _numTokens, uint _pollID)\n  constant public returns (uint prevNode) \n  {\n    // Get the last node in the list and the number of tokens in that node\n    uint nodeID = getLastNode(_voter);\n    uint tokensInNode = getNumTokens(_voter, nodeID);\n\n    // Iterate backwards through the list until reaching the root node\n    while (nodeID != 0) {\n      // Get the number of tokens in the current node\n      tokensInNode = getNumTokens(_voter, nodeID);\n      if (tokensInNode <= _numTokens) { // We found the insert point!\n        if (nodeID == _pollID) {\n          // This is an in-place update. Return the prev node of the node being updated\n          nodeID = dllMap[_voter].getPrev(nodeID);\n        }\n        // Return the insert point\n        return nodeID; \n      }\n      // We did not find the insert point. Continue iterating backwards through the list\n      nodeID = dllMap[_voter].getPrev(nodeID);\n    }\n\n    // The list is empty, or a smaller value than anything else in the list is being inserted\n    return nodeID;\n  }\n\n  // ----------------\n  // GENERAL HELPERS:\n  // ----------------\n\n  /**\n  @dev Checks if an expiration date has been reached\n  @param _terminationDate Integer timestamp of date to compare current timestamp with\n  @return expired Boolean indication of whether the terminationDate has passed\n  */\n  function isExpired(uint _terminationDate) constant public returns (bool expired) {\n    return (block.timestamp > _terminationDate);\n  }\n\n  /**\n  @dev Generates an identifier which associates a user and a poll together\n  @param _pollID Integer identifier associated with target poll\n  @return UUID Hash which is deterministic from _user and _pollID\n  */\n  /* solium-disable-next-line */\n  function attrUUID(address _user, uint _pollID) public pure returns (bytes32 UUID) {\n    return keccak256(_user, _pollID);\n  }\n}\n\n","abiDocs":[{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getTotalNumberOfTokensForWinningOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the total winning votes for reward distribution purposes","return":"Total number of votes committed to the winning option for specified poll","fileLineNumber":275,"signature":"getTotalNumberOfTokensForWinningOption(uint256)","signatureHash":"053e71a6"},{"constant":true,"inputs":[],"name":"INITIAL_POLL_NONCE","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":47,"signature":"INITIAL_POLL_NONCE()","signatureHash":"2173a10f"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_numTokens","type":"uint256"},{"name":"_pollID","type":"uint256"}],"name":"getInsertPointForNumTokens","outputs":[{"name":"prevNode","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":417,"signature":"getInsertPointForNumTokens(address,uint256,uint256)","signatureHash":"2c052031"},{"constant":false,"inputs":[{"name":"_voteQuorum","type":"uint256","description":"Type of majority (out of 100) that is necessary for poll to be successful"},{"name":"_commitDuration","type":"uint256","description":"Length of desired commit period in seconds"},{"name":"_revealDuration","type":"uint256","description":"Length of desired reveal period in seconds"}],"name":"startPoll","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Initiates a poll with canonical configured parameters at pollID emitted by PollCreated event","fileLineNumber":236,"signature":"startPoll(uint256,uint256,uint256)","signatureHash":"32ed3d60"},{"constant":true,"inputs":[{"name":"","type":"address"}],"name":"voteTokenBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":51,"signature":"voteTokenBalance(address)","signatureHash":"3b930294"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"}],"name":"getLastNode","outputs":[{"name":"pollID","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets top element of sorted poll-linked-list","return":"Integer identifier to poll with maximum number of tokens committed to it","fileLineNumber":394,"signature":"getLastNode(address)","signatureHash":"427fa1d2"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"revealPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for the specified poll's revealEndDate","notice":"Checks if the reveal period is still active for the specified poll","fileLineNumber":326,"signature":"revealPeriodActive(uint256)","signatureHash":"441c77c0"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"isPassed","outputs":[{"name":"passed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Check if votesFor out of totalVotes exceeds votesQuorum (requires pollEnded)","notice":"Determines if proposal has passed","fileLineNumber":259,"signature":"isPassed(uint256)","signatureHash":"49403183"},{"constant":true,"inputs":[{"name":"","type":"uint256"}],"name":"pollMap","outputs":[{"name":"commitEndDate","type":"uint256"},{"name":"revealEndDate","type":"uint256"},{"name":"voteQuorum","type":"uint256"},{"name":"votesFor","type":"uint256"},{"name":"votesAgainst","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":50,"signature":"pollMap(uint256)","signatureHash":"6148fed5"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_salt","type":"uint256","description":"Arbitrarily chosen integer used to generate secretHash"}],"name":"getNumLosingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","return":"correctVotes Number of tokens voted for losing option","fileLineNumber":213,"signature":"getNumLosingTokens(address,uint256,uint256)","signatureHash":"6afa97a8"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"}],"name":"getLockedTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the numTokens property of getLastNode","return":"Maximum number of tokens committed in poll specified","fileLineNumber":403,"signature":"getLockedTokens(address)","signatureHash":"6b2d95d4"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_secretHash","type":"bytes32","description":"Commit keccak256 hash of voter's choice and salt (tightly packed in this order)"},{"name":"_numTokens","type":"uint256","description":"The number of tokens to be committed towards the target poll"},{"name":"_prevPollID","type":"uint256","description":"The ID of the poll that the user has voted the maximum number of tokens in which is still less than or equal to numTokens"}],"name":"commitVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Commits vote using hash of choice and secret salt to conceal vote until reveal","fileLineNumber":122,"signature":"commitVote(uint256,bytes32,uint256,uint256)","signatureHash":"6cbf9c5e"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"didCommit","outputs":[{"name":"committed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if user has committed for specified poll","return":"Boolean indication of whether user has committed","fileLineNumber":338,"signature":"didCommit(address,uint256)","signatureHash":"7f97e836"},{"constant":true,"inputs":[{"name":"_prevID","type":"uint256","description":"Integer identifier associated with previous poll in sorted order"},{"name":"_nextID","type":"uint256","description":"Integer identifier associated with next poll in sorted order"},{"name":"_voter","type":"address","description":"Address of user to check DLL position for"},{"name":"_numTokens","type":"uint256","description":"The number of tokens to be committed towards the poll (used for sorting)"}],"name":"validPosition","outputs":[{"name":"valid","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Compares previous and next poll's committed tokens for sorting purposes","return":"valid Boolean indication of if the specified position maintains the sort","fileLineNumber":156,"signature":"validPosition(uint256,uint256,address,uint256)","signatureHash":"819b0293"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"The pollID whose existance is to be evaluated."}],"name":"pollExists","outputs":[{"name":"exists","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if a poll exists","return":"Boolean Indicates whether a poll exists for the provided pollID","fileLineNumber":361,"signature":"pollExists(uint256)","signatureHash":"88d21ff3"},{"constant":true,"inputs":[],"name":"pollNonce","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":48,"signature":"pollNonce()","signatureHash":"97508f36"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with the target poll"}],"name":"rescueTokens","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Unlocks tokens locked in unrevealed vote where poll has ended","fileLineNumber":103,"signature":"rescueTokens(uint256)","signatureHash":"97603560"},{"constant":true,"inputs":[{"name":"_user","type":"address"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"attrUUID","outputs":[{"name":"UUID","type":"bytes32"}],"payable":false,"stateMutability":"pure","type":"function","details":"Generates an identifier which associates a user and a poll together","return":"UUID Hash which is deterministic from _user and _pollID","fileLineNumber":463,"signature":"attrUUID(address,uint256)","signatureHash":"a1103f37"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256","description":"The number of votingTokens desired in exchange for ERC20 tokens"}],"name":"requestVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","details":"Assumes that msg.sender has approved voting contract to spend on their behalf","notice":"Loads _numTokens ERC20 tokens into the voting contract for one-to-one voting rights","fileLineNumber":80,"signature":"requestVotingRights(uint256)","signatureHash":"a25236fe"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"commitPeriodActive","outputs":[{"name":"active","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for the specified poll's commitEndDate","return":"Boolean indication of isCommitPeriodActive for target poll","notice":"Checks if the commit period is still active for the specified poll","fileLineNumber":315,"signature":"commitPeriodActive(uint256)","signatureHash":"a4439dc5"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"didReveal","outputs":[{"name":"revealed","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if user has revealed for specified poll","return":"Boolean indication of whether user has revealed","fileLineNumber":350,"signature":"didReveal(address,uint256)","signatureHash":"aa7ca464"},{"constant":false,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_voteOption","type":"uint256","description":"Vote choice used to generate commitHash for associated poll"},{"name":"_salt","type":"uint256","description":"Secret number used to generate commitHash for associated poll"}],"name":"revealVote","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Reveals vote with choice and secret salt used in generating commitHash to attribute committed tokens","fileLineNumber":169,"signature":"revealVote(uint256,uint256,uint256)","signatureHash":"b11d8bb8"},{"constant":true,"inputs":[{"name":"_voter","type":"address"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"},{"name":"_salt","type":"uint256","description":"Arbitrarily chosen integer used to generate secretHash"}],"name":"getNumPassingTokens","outputs":[{"name":"correctVotes","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","return":"correctVotes Number of tokens voted for winning option","fileLineNumber":195,"signature":"getNumPassingTokens(address,uint256,uint256)","signatureHash":"b43bd069"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getNumTokens","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Wrapper for getAttribute with attrName=\"numTokens\"","return":"Number of tokens committed to poll in sorted poll-linked-list","fileLineNumber":385,"signature":"getNumTokens(address,uint256)","signatureHash":"d1382092"},{"constant":true,"inputs":[{"name":"_voter","type":"address","description":"Address of user to check against"},{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getCommitHash","outputs":[{"name":"commitHash","type":"bytes32"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the bytes32 commitHash property of target poll","return":"Bytes32 hash property attached to target poll","fileLineNumber":375,"signature":"getCommitHash(address,uint256)","signatureHash":"d901402b"},{"constant":true,"inputs":[{"name":"_terminationDate","type":"uint256","description":"Integer timestamp of date to compare current timestamp with"}],"name":"isExpired","outputs":[{"name":"expired","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks if an expiration date has been reached","return":"expired Boolean indication of whether the terminationDate has passed","fileLineNumber":453,"signature":"isExpired(uint256)","signatureHash":"d9548e53"},{"constant":false,"inputs":[{"name":"_numTokens","type":"uint256","description":"The number of ERC20 tokens desired in exchange for voting rights"}],"name":"withdrawVotingRights","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","notice":"Withdraw _numTokens ERC20 tokens from the voting contract, revoking these voting rights","fileLineNumber":91,"signature":"withdrawVotingRights(uint256)","signatureHash":"e7b1d43c"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256","description":"Integer identifier associated with target poll"}],"name":"getTotalNumberOfTokensForLosingOption","outputs":[{"name":"numTokens","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function","details":"Gets the total losing votes for reward distribution purposes","return":"Total number of votes committed to the losing option for specified poll","fileLineNumber":289,"signature":"getTotalNumberOfTokensForLosingOption(uint256)","signatureHash":"e8cfa3f0"},{"constant":true,"inputs":[{"name":"_pollID","type":"uint256"}],"name":"pollEnded","outputs":[{"name":"ended","type":"bool"}],"payable":false,"stateMutability":"view","type":"function","details":"Checks isExpired for specified poll's revealEndDate","return":"Boolean indication of whether polling period is over","notice":"Determines if poll is over","fileLineNumber":303,"signature":"pollEnded(uint256)","signatureHash":"ee684830"},{"constant":true,"inputs":[],"name":"token","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function","fileLineNumber":56,"signature":"token()","signatureHash":"fc0c546a"},{"inputs":[{"name":"_tokenAddr","type":"address"}],"payable":false,"stateMutability":"nonpayable","type":"constructor","fileLineNumber":66},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VoteCommitted","type":"event","fileLineNumber":18,"signature":"_VoteCommitted(uint256,uint256,address)","signatureHash":"ea7979e4"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":false,"name":"votesFor","type":"uint256"},{"indexed":false,"name":"votesAgainst","type":"uint256"},{"indexed":true,"name":"choice","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VoteRevealed","type":"event","fileLineNumber":19,"signature":"_VoteRevealed(uint256,uint256,uint256,uint256,uint256,address)","signatureHash":"f42c7885"},{"anonymous":false,"inputs":[{"indexed":false,"name":"voteQuorum","type":"uint256"},{"indexed":false,"name":"commitEndDate","type":"uint256"},{"indexed":false,"name":"revealEndDate","type":"uint256"},{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":true,"name":"creator","type":"address"}],"name":"_PollCreated","type":"event","fileLineNumber":20,"signature":"_PollCreated(uint256,uint256,uint256,uint256,address)","signatureHash":"404f1f1c"},{"anonymous":false,"inputs":[{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VotingRightsGranted","type":"event","fileLineNumber":21,"signature":"_VotingRightsGranted(uint256,address)","signatureHash":"f7aaf024"},{"anonymous":false,"inputs":[{"indexed":false,"name":"numTokens","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_VotingRightsWithdrawn","type":"event","fileLineNumber":22,"signature":"_VotingRightsWithdrawn(uint256,address)","signatureHash":"faeb7dbb"},{"anonymous":false,"inputs":[{"indexed":true,"name":"pollID","type":"uint256"},{"indexed":true,"name":"voter","type":"address"}],"name":"_TokensRescued","type":"event","fileLineNumber":23,"signature":"_TokensRescued(uint256,address)","signatureHash":"40250766"}]}
