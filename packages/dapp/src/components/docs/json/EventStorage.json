{"title":"Event Storage Archive","fileName":"/contracts/newsroom/EventStorage.sol","name":"EventStorage","abi":[{"constant":false,"inputs":[{"name":"data","type":"string"}],"name":"store","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"anonymous":false,"inputs":[{"indexed":true,"name":"dataHash","type":"bytes32"},{"indexed":false,"name":"data","type":"string"}],"name":"StringStored","type":"event"}],"bin":"6060604052341561000f57600080fd5b6101d58061001e6000396000f300606060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063131a068014610046575b600080fd5b341561005157600080fd5b6100a1600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506100a3565b005b806040518082805190602001908083835b6020831015156100d957805182526020820191506020810190506020830392506100b4565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040518091039020600019167f2162a3c4a129c520b65f2837a045d97d2119710c87276c5ca08ed28155daa13a826040518080602001828103825283818151815260200191508051906020019080838360005b8381101561016c578082015181840152602081019050610151565b50505050905090810190601f1680156101995780820380516001836020036101000a031916815260200191505b509250505060405180910390a2505600a165627a7a7230582032e279bdef1a6f553b4e332c51df14cba326a3f5ec33672dc56a5f4590e3fe960029","opcodes":"PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x131A0680 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA1 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP3 ADD DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY DUP3 ADD SWAP2 POP POP POP POP POP POP SWAP2 SWAP1 POP POP PUSH2 0xA3 JUMP JUMPDEST STOP JUMPDEST DUP1 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT ISZERO ISZERO PUSH2 0xD9 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0xB4 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 KECCAK256 PUSH1 0x0 NOT AND PUSH32 0x2162A3C4A129C520B65F2837A045D97D2119710C87276C5CA08ED28155DAA13A DUP3 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x151 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x199 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 ORIGIN 0xe2 PUSH26 0xBDEF1A6F553B4E332C51DF14CBA326A3F5EC33672DC56A5F4590 0xe3 INVALID SWAP7 STOP 0x29 ","source":"pragma solidity ^0.4.19;\n\n/**\n@title Event Storage Archive\n@notice This smart-contract uses events to cheaply store content on the blockchain.\n@dev For most use-cases, using events to store strings than using the \"Storage\" memory model is cheaper\nAdditionally the keccak256 is also calculated for easier filtering of events for which we're looking for\n*/\ncontract EventStorage {\n  event StringStored(bytes32 indexed dataHash, string data);\n\n  function store(string data) public {\n    emit StringStored(keccak256((data)), data);\n  }\n}\n","abiDocs":[{"constant":false,"inputs":[{"name":"data","type":"string"}],"name":"store","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function","fileLineNumber":12,"signature":"store(string)","signatureHash":"131a0680"},{"anonymous":false,"inputs":[{"indexed":true,"name":"dataHash","type":"bytes32"},{"indexed":false,"name":"data","type":"string"}],"name":"StringStored","type":"event","fileLineNumber":10,"signature":"StringStored(bytes32,string)","signatureHash":"2162a3c4"}]}
